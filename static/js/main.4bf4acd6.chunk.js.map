{"version":3,"sources":["core/StateObject.js","core/Drawer.js","core/ScriptManager.js","components/FileDrawer.js","components/InstantDrawer.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["StateObject","this","state","newState","Object","assign","Drawer","execute","script","trim","split","forEach","line","filter","arg","command","args","canvas","Error","createCanvas","drawLine","drawRectangle","bucketFilling","updateResult","widthString","heightString","checkArguments","height","width","Array","fill","length","topBottomLine","matrix","map","isOutOfRange","x","y","x1Str","y1Str","x2Str","y2Str","x1","y1","x2","y2","to","i","xFirstStr","yFirstStr","filling","xFirst","yFirst","initialFilling","getResult","result","isCanvasCreated","description","isNaN","Number","isInteger","join","ScriptManager","drawer","setState","error","downloadResult","link","document","createElement","download","blob","Blob","type","href","window","URL","createObjectURL","click","file","setErrorMessage","reader","FileReader","onloadend","e","target","readyState","DONE","message","readAsBinaryString","FileDrawer","classes","useStyles","fileInput","useRef","useState","fileUri","setFileUri","scriptManager","setScriptManager","errorMessage","useEffect","SctiptManager","className","main","id","name","accept","style","display","ref","onChange","event","loadFromFile","files","path","current","value","button","variant","color","onClick","makeStyles","theme","justifyContent","alignItems","margin","transform","buttonContainer","InstantDrawer","setResult","textarea","autoFocus","defaultValue","output","readOnly","flex","padding","fontSize","fontFamily","lineHeight","Main","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bf4acd6.chunk.js","sourcesContent":["export default class StateObject {\n  constructor () {\n    this.state = {};\n  }\n\n  setState (newState) {\n    this.state = Object.assign(this.state, newState);\n  }\n}","import StateObject from \"./StateObject\";\n\nexport default class Drawer extends StateObject {\n  constructor () {\n    super();\n\n    this.canvas = null;\n    this.state = {\n      isCanvasCreated: false,\n      result: ''\n    }\n  }\n\n  execute = (script) => {\n    const lines = script.trim().split('\\n');\n\n    lines.forEach(line => {\n      const [command, ...args] = line.split(' ').filter(arg => arg);\n\n      if (command) {\n        if (command === 'C') {\n          if(!this.canvas) {\n            this.createCanvas(...args);\n          } else {\n            throw new Error('Canvas has already been created!');\n          }\n        } else {\n          if (!this.canvas) {\n            throw new Error(\n              `Cannot execute command ${command}. \n              Create canvas (use 'C' command) before drawing!`\n            );\n          }\n        }\n\n        switch (command) {\n          case 'C':\n            break;\n          case 'L':\n            this.drawLine(...args);\n            break;\n          case 'R':\n            this.drawRectangle(...args);\n            break;\n          case 'B':\n            this.bucketFilling(...args);\n            break;\n          default:\n            throw new Error(`Command '${command}' was not found!`);\n        }\n\n        this.updateResult();\n      }\n    });\n  }\n\n  checkArguments(args, command, description) {   \n    args.forEach(arg => {\n      if (typeof +arg !== 'number' || isNaN(+arg) || +arg < 0 || !Number.isInteger(+arg)) {\n        throw new Error(`Invalid arguments (${args}) for command '${command}' - ${description}!`);\n      }\n    });\n  }\n\n  createCanvas = (widthString, heightString) => {\n    this.checkArguments([widthString, heightString], 'C', 'create canvas');\n\n    const height = +heightString;\n    const width = +widthString;\n\n    let line = Array(width + 2).fill(' ');\n    line[0] = '|';\n    line[line.length - 1] = '|';\n    let topBottomLine = Array(width + 2).fill('-');\n    const matrix = new Array(height + 2).fill().map(() => [...line]);\n    matrix[0] = topBottomLine;\n    matrix[matrix.length - 1] = topBottomLine;\n  \n    this.canvas = {\n      height,\n      width,\n      matrix\n    };\n  }\n\n  isOutOfRange = (x, y) => {\n    const { width, height } = this.canvas;\n\n    if (+x < 0 || +y < 0 || +x > width || +y > height) {\n      return true;\n    }\n\n    return false;\n  }\n\n  drawLine = (x1Str, y1Str, x2Str, y2Str) => { \n    this.checkArguments([x1Str, y1Str, x2Str, y2Str], 'L', 'draw line');\n\n    const x1 = +x1Str;\n    const y1 = +y1Str;\n    const x2 = +x2Str;\n    const y2 = +y2Str;\n\n    if (this.isOutOfRange(x1, y1) || this.isOutOfRange(x2, y2)) {\n      throw new Error('Out of range!');\n    }\n\n    if (y1 === y2) {\n      const from = x1 < x2 ? x1 : x2;\n      const to = x1 < x2 ? x2 : x1;\n      for (let i = from; i <= to; ++i) {\n        this.canvas.matrix[y1][i] = 'x';\n      }\n\n      return;\n    }\n\n    if (x1 === x2) {\n      const from = y1 < y2 ? y1 : y2;\n      const to = y1 < y2 ? y2 : y1;\n      for (let i = from; i <= to; ++i) {\n        this.canvas.matrix[i][x1] = 'x';\n      }\n\n      return;\n    }\n\n    throw new Error('Only vertical and horisintal lines are allowed!')\n  }\n\n  drawRectangle = (x1, y1, x2, y2) => {\n    this.checkArguments([x1, y1, x2, y2], 'R', 'draw rectangle');\n\n    if (this.isOutOfRange(x1, y1) || this.isOutOfRange(x2, y2)) {\n      throw new Error('Out of range!');\n    }\n\n    this.drawLine(x1, y1, x1, y2);\n    this.drawLine(x1, y1, x2, y1);\n    this.drawLine(x2, y2, x1, y2);\n    this.drawLine(x2, y2, x2, y1);\n  }\n\n  bucketFilling = (xFirstStr, yFirstStr, filling) => {    \n    const { isOutOfRange } = this;\n\n    this.checkArguments([xFirstStr, yFirstStr], 'B', 'paint bucket');\n\n    if (isOutOfRange(xFirstStr, yFirstStr)) {\n      throw new Error('Out of range!');\n    }\n\n    if (!filling) {\n      throw new Error('No filling argument provided!');\n    }\n\n    const xFirst = +xFirstStr;\n    const yFirst = +yFirstStr;\n\n    filling = filling[0];\n\n\n    // recursive filling algorithm\n    const fill = (x, y, initialFilling) => {\n      if (!isOutOfRange(x, y) && initialFilling !== this.canvas.matrix[y][x]) {\n        // top\n        if (!isOutOfRange(x, y - 1) && this.canvas.matrix[y - 1][x] === initialFilling) {\n          this.canvas.matrix[y - 1][x] = filling;\n          fill(x, y - 1, initialFilling);\n        }\n        // right\n        if (!isOutOfRange(x + 1, y) && this.canvas.matrix[y][x + 1] === initialFilling) {\n          this.canvas.matrix[y][x + 1] = filling;\n          fill(x + 1, y, initialFilling);\n        }\n        // bottom\n        if (!isOutOfRange(x, y + 1) && this.canvas.matrix[y + 1][x] === initialFilling) {\n          this.canvas.matrix[y + 1][x] = filling;\n          fill(x, y + 1, initialFilling);\n        }\n        // left\n        if (!isOutOfRange(x - 1, y) && this.canvas.matrix[y][x - 1] === initialFilling) {\n          this.canvas.matrix[y][x - 1] = filling;\n          fill(x - 1, y, initialFilling);\n        }\n      }\n    }\n\n    const initialFilling = this.canvas.matrix[yFirst][xFirst];\n    this.canvas.matrix[yFirst][xFirst] = filling;\n\n    fill(xFirst, yFirst, initialFilling);\n  }\n\n  updateResult() {\n    this.state.result += this.canvas.matrix.map(line => line.join('')).join('\\n') + '\\n'; \n  }\n\n  getResult = () => {\n    if (this.canvas) {\n      return this.state.result;\n    } \n\n    throw new Error('No result to return!');\n  }\n}","import StateObject from './StateObject';\nimport Drawer from './Drawer';\n\nexport default class ScriptManager extends StateObject {\n  constructor () {\n    super(); \n\n    this.state = {\n      script: '',\n      result: ''\n    }\n  }\n\n  loadFromFile (file, setErrorMessage) {\n    if (!file) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onloadend = (e) => {\n      if (e.target.readyState === FileReader.DONE) {\n        this.setState({ script: e.target.result});\n\n        try {\n          this.execute(this.state.script);\n        } catch (error) {\n          setErrorMessage && setErrorMessage(error.message);\n        }   \n      } else {\n        throw new Error('A problem occured while reading file.');\n      }\n    };\n    reader.readAsBinaryString(file);\n  }\n\n  execute = (script) => {\n    const drawer = new Drawer();\n\n    if (script) {\n      try {\n        drawer.execute(script);\n\n        const result = drawer.getResult();\n\n        this.setState({ result });\n      } catch (error) {\n        throw error\n      }   \n\n      return;\n    } \n\n    throw new Error('No script to execute!');\n  }\n\n  getResult = () => {\n    return this.state.result;\n  }\n\n  downloadResult = () => {\n    const result = this.getResult();\n\n    const link = document.createElement('a');\n    link.download = 'drawing.txt';\n    const blob = new Blob([result], { type: 'text/plain' });\n    link.href = window.URL.createObjectURL(blob);\n    link.click();\n  }\n}","import React, { useRef, useState, useEffect } from 'react';\nimport Buttton from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SctiptManager from '../core/ScriptManager';\n\n\nconst FileDrawer = () => {\n  const classes = useStyles();\n  const fileInput = useRef();\n  const [fileUri, setFileUri] = useState('');\n  const [scriptManager, setScriptManager] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => setScriptManager(new SctiptManager()), []);\n\n  const chooseFile = () => {\n    fileInput.current.click();\n  }\n\n  const processFile = (event) => {\n    setErrorMessage('');\n    try {\n      scriptManager.loadFromFile(event.target.files[0], setErrorMessage);\n\n      const path = fileInput.current.value;\n      setFileUri(path);\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n  const downloadFile = () => {\n    setErrorMessage('');\n    try {\n      scriptManager.downloadResult()\n    } catch (error) {\n      setErrorMessage(error.message)\n    }\n  }\n\n  return (\n    <div \n      className={classes.main}\n    >\n      <input\n        id=\"file-input\"\n        type=\"file\"\n        name=\"name\"\n        accept=\".txt\"\n        style={{ display: 'none' }}\n        ref={fileInput}\n        onChange={processFile}\n      />\n      <div>\n        <div className={classes}>\n          <Buttton\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={chooseFile}\n          >\n            Upload Script\n          </Buttton>\n          <Buttton\n            className={classes.button}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={downloadFile}\n          >\n            Download Result\n          </Buttton>\n        </div>\n        <div>\n          Chosen file: {fileUri}\n        </div>\n        <div>\n          {errorMessage}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default FileDrawer;\n\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    height: '10vh',\n    width: '100vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    margin: '5px',\n    '&:hover': {\n      transform: 'scale(1.05)'\n    },\n    '&:active': {\n      transform: 'scale(1)'\n    }\n  },\n  buttonContainer: {\n    display: 'flex'\n  }\n}));","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SctiptManager from '../core/ScriptManager';\n\nconst defaultScript = `C 20 4\nL 1 2 6 2\nL 6 3 6 4 \nR 16 1 20 3\nB 10 3 o`;\n\n\nconst InstantDrawer = () => {\n  const classes = useStyles();\n  const [scriptManager, setScriptManager] = useState(null);\n  const [result, setResult] = useState('The result is gonna be shown here');\n  useEffect(() => setScriptManager(new SctiptManager()), []);\n\n  const processScript = (event) => {\n    setResult('');\n    try {\n      scriptManager && scriptManager.execute(event.target.value);\n      setResult(scriptManager.getResult());\n    } catch (error) {\n      setResult(error.message)\n    }\n  }\n\n  return (\n    <div \n      className={classes.main}\n    >\n      <textarea\n        className={classes.textarea}\n        onChange={processScript}\n        autoFocus\n        defaultValue={defaultScript}\n      ></textarea>\n      <textarea\n        className={classes.output}\n        readOnly\n        value={result}\n      >\n      </textarea>\n    </div>\n  );\n}\n\n\nexport default InstantDrawer;\n\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    height: '90vh',\n    width: '100vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textarea: {\n    height: '80vh',\n    flex: 1,\n    margin: '10px',\n    padding: '10px',\n    fontSize: '3vh',\n    fontFamily: 'Courier'\n  },\n  output: {\n    height: '80vh',\n    flex: 1,\n    margin: '10px',\n    padding: '10px',\n    fontSize: '3vh',\n    lineHeight: '2.7vh',\n    fontFamily: 'Courier'\n  }\n}));","import React from 'react';\n\nimport FileDrawer from './FileDrawer';\nimport InstantDrawer from './InstantDrawer';\n\n\nconst Main = () => {\n  return (\n    <>\n      <FileDrawer />\n      <InstantDrawer />\n    </>\n  );\n}\n\n\nexport default Main;","import React from 'react';\n\nimport Main from './components/Main';\n\nconst App = () => {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}